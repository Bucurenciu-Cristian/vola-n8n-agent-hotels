{
  "name": "Hotels-Agent-CRISTI",
  "nodes": [
    {
      "parameters": {
        "toolDescription": "Scrape Google maps to get reviews",
        "method": "POST",
        "url": "https://api.apify.com/v2/acts/compass~crawler-google-places/run-sync-get-dataset-items",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "apifyApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "maxItems",
              "value": "15"
            },
            {
              "name": "limit",
              "value": "15"
            },
            {
              "name": "maxTotalChargeUsd",
              "value": "={{ Number(0.15) }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"locationQuery\": \"{{ $fromAI('locationQuery', `Define location using free text. Simpler formats work best; e.g., use City + Country`, 'string', 'Sibiu') }}\",\n    \"maxCrawledPlacesPerSearch\": {{ $fromAI('maxCrawledPlacesPerSearch', `Maximum number of places to crawl per search`, 'number', 10) }},\n    \"language\": \"{{ $fromAI('language', `The language to search in (en, ro, us)`, 'string', 'ro') }}\",\n    \"maxReviews\": {{ $fromAI('maxReviews', `How many reviews should we want to have?`, 'number', 10) }},\n    \"reviewsSort\": \"newest\",\n    \"reviewsOrigin\": \"google\",\n    \"scrapeReviewsPersonalData\": false,\n    \"searchStringsArray\": [\"hotels\"],\n    \"city\": \"{{ $fromAI('city', 'The specific city name for location-based search', 'string') }}\",\n    \"scrapeImageAuthors\": false,\n    \"maxImages\": 5\n}",
        "options": {},
        "optimizeResponse": true,
        "fieldsToInclude": "selected",
        "fields": "=hotelStars,hotelDescription,checkInDate,checkOutDate,similarHotelsNearby,hotelAds,placeId,totalScore,reviewsCount,reviewsDistribution,reviews,searchString,address,title,city,searchPageUrl"
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        2000,
        -352
      ],
      "id": "9dbe15bf-eadb-4662-b63e-89dda29fc191",
      "name": "Scrape Google Maps",
      "retryOnFail": true,
      "alwaysOutputData": false,
      "disabled": true,
      "credentials": {
        "apifyApi": {
          "id": "ShD3a36a2AnJAg66",
          "name": "apify-new"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1040,
        -144
      ],
      "id": "b4f4e35c-e588-4a99-9a20-6921fe4abbd2",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "6crYZOqBsqTBxATq",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "tableName": "hotels_agent",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        1184,
        -144
      ],
      "id": "558bc88e-d506-4db8-a81a-9ff2918847ce",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "FPy2djSGyWu7XCgP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1cedc1f8-0343-4fd7-ae02-c94ebfcacc69",
              "name": "chatInput",
              "value": "={{ $json.body.chatInput }}",
              "type": "string"
            },
            {
              "id": "fbff52a0-dbd2-47a5-b933-27ead60f90fa",
              "name": "sessionId",
              "value": "={{ $json.body.sessionId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1008,
        -544
      ],
      "id": "599d88a4-1274-44a2-8ab4-e5a659afc33c",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "042d2591-94ed-43a9-a5e5-0860412c08e5",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        800,
        -544
      ],
      "id": "f66b2021-6e01-4af7-a494-7e038c9344f1",
      "name": "Vola Webhook",
      "webhookId": "042d2591-94ed-43a9-a5e5-0860412c08e5"
    },
    {
      "parameters": {
        "content": "## Vola\nWebhook",
        "height": 240,
        "width": 1392,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        752,
        -640
      ],
      "typeVersion": 1,
      "id": "050d75e0-342c-4669-9597-edbf42578c47",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "toolDescription": "Get Accomodation Reviews for Airbnb Platform",
        "method": "POST",
        "url": "https://api.apify.com/v2/acts/tri_angle~airbnb-reviews-scraper/run-sync-get-dataset-items",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "apifyApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "maxItems",
              "value": "15"
            },
            {
              "name": "limit",
              "value": "15"
            },
            {
              "name": "maxTotalChargeUsd",
              "value": "={{ Number(0.15) }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "locale",
              "value": "ro-RO"
            },
            {
              "name": "startUrls",
              "value": "={{ $fromAI('startUrls', 'Array of cleaned hotel URLs from booking scraper results for further processing. This function should extract hotel URLs from the previously scraped Booking.com data and prepare them for additional scraping tools. Process each property object by: 1) Extract the \"url\" field from each hotel/property in the booking results, 2) Clean the URLs by removing all query parameters (strip everything after and including the \"?\" character to get base URLs), 3) Format as an array of objects where each object contains both \"url\" and \"method\" properties, 4) Set method to \"GET\" for all URLs. Expected output format: [{\"url\": \"https://example-hotel-url.com\", \"method\": \"GET\"}, {\"url\": \"https://another-hotel-url.com\", \"method\": \"GET\"}]. This tool should ONLY be called AFTER successfully receiving and processing results from the main Booking.com scraper tool, as it depends on that data to generate the URLs for subsequent processing steps.', 'json') }}"
            }
          ]
        },
        "options": {},
        "optimizeResponse": true,
        "fieldsToInclude": "selected",
        "fields": "localizedText,startUrl,rating,text,id,localizedReview"
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1376,
        48
      ],
      "id": "0af9c8da-8118-44bb-9b8f-4b18a6e3f200",
      "name": "Reviews Airbnb",
      "retryOnFail": true,
      "alwaysOutputData": false,
      "credentials": {
        "apifyApi": {
          "id": "ShD3a36a2AnJAg66",
          "name": "apify-new"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "toolDescription": "Get Accomodation Reviews for Booking.com Platform",
        "method": "POST",
        "url": "https://api.apify.com/v2/acts/voyager~booking-reviews-scraper/run-sync-get-dataset-items",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "apifyApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "maxItems",
              "value": "15"
            },
            {
              "name": "limit",
              "value": "15"
            },
            {
              "name": "maxTotalChargeUsd",
              "value": "={{ Number(0.15) }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "cutoffDate",
              "value": "200 days"
            },
            {
              "name": "maxReviewsPerHotel",
              "value": "={{ Number(50) }}"
            },
            {
              "name": "sortReviewsBy",
              "value": "f_relevance"
            },
            {
              "name": "startUrls",
              "value": "={{ $fromAI('startUrls', 'Array of cleaned hotel URLs from booking scraper results. Extract the url field from each property, STRIP query parameters (remove ? and everything after), then format as [{\"url\": \"clean_hotel_url_1\"}, {\"url\": \"clean_hotel_url_2\"}]. This tool should only be called AFTER receiving results from the main Booking.com scraper.', 'json') }}"
            }
          ]
        },
        "options": {},
        "optimizeResponse": true,
        "fieldsToInclude": "except",
        "fields": "userAvatar,id,stayRoomId,hotelId,reviewsScoreFilter,reviewPage,startUrl,checkInDate,checkOutDate"
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1552,
        48
      ],
      "id": "315804d7-307f-48ea-804a-d8619c4c246e",
      "name": "Reviews Booking",
      "retryOnFail": true,
      "credentials": {
        "apifyApi": {
          "id": "ShD3a36a2AnJAg66",
          "name": "apify-new"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## Tools\nBusinessLogic",
        "height": 388,
        "width": 1212,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        928,
        0
      ],
      "typeVersion": 1,
      "id": "ee11c7e4-cfb8-4bc1-91a8-c17fdc097724",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Agent\nBusinessLogic",
        "height": 400,
        "width": 1212,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        928,
        -400
      ],
      "typeVersion": 1,
      "id": "528af7e9-861b-4f62-bc40-bd5683c91303",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Chat \n",
        "height": 788,
        "width": 180
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        752,
        -400
      ],
      "typeVersion": 1,
      "id": "ebc01c2f-5b2a-4bc0-a4da-220c7bbd4a17",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.3,
      "position": [
        1776,
        -560
      ],
      "id": "acc10bf6-6f0b-4ec9-a777-bd29569ff254",
      "name": "Respond to Webhook",
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "toolDescription": "Scrape Booking to get listings.",
        "method": "POST",
        "url": "https://api.apify.com/v2/acts/voyager~booking-scraper/run-sync-get-dataset-items",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "apifyApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "maxItems",
              "value": "15"
            },
            {
              "name": "limit",
              "value": "15"
            },
            {
              "name": "maxTotalChargeUsd",
              "value": "={{ Number(0.15) }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "minMaxPrice",
              "value": "={{ $fromAI('price_range', `The price range acceptable for the user formated as min-max, by default is 0-999999`, 'string') }}"
            },
            {
              "name": "checkIn",
              "value": "={{ $fromAI('check_in_date', `Check in date as ISO date only`, 'string') }}"
            },
            {
              "name": "checkOut",
              "value": "={{ $fromAI('check_out_date', `Check out date as ISO date only`, 'string') }}"
            },
            {
              "name": "search",
              "value": "={{ $fromAI('Destination', `The destination the user wants to visit`, 'string') }}"
            },
            {
              "name": "flexWindow",
              "value": "={{ $fromAI('flexibility_window', `How many days plus or minus the check-in or check-out date the client is ok with`, 'string') }}"
            },
            {
              "name": "adults",
              "value": "={{ $fromAI('adults', `Number of adults for the trip`, 'number') }}"
            },
            {
              "name": "children",
              "value": "={{ $fromAI('children', `Number of children for the trip`, 'number') }}"
            },
            {
              "name": "currency",
              "value": "={{ $fromAI('currency', `Currency in which to display results, usually RON, EUR or USD`, 'string') }}"
            },
            {
              "name": "rooms",
              "value": "={{ $fromAI('rooms', `Number of rooms needed by the client`, 'number') }}"
            },
            {
              "name": "language",
              "value": "ro"
            },
            {
              "name": "propertyType",
              "value": "={{ $fromAI('propertyType', 'One of the following: \"Hotels\", \"Apartments\", \"Hostels\", \"Guest Houses\", \"Homestays\", \"Bed an breakfasts\", \"Holiday homes\", \"Boats\", \"Villas\", \"Motels\", \"Resorts\", \"Holiday parks\", \"Campsites\", \"Luxury tents\" or \"none\"', 'string') }}"
            }
          ]
        },
        "options": {},
        "optimizeResponse": true,
        "fieldsToInclude": "except",
        "fields": "order,licenseInfo,hostInfo,traderInfo,breadcrumbs,timeOfScrapeISO,hotelId"
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1728,
        48
      ],
      "id": "ac3a7aea-4234-4475-a3a0-7a50db544dde",
      "name": "Scrape Booking",
      "retryOnFail": true,
      "credentials": {
        "apifyApi": {
          "id": "ShD3a36a2AnJAg66",
          "name": "apify-new"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "toolDescription": "Scrape AirBnb to get available listings.",
        "method": "POST",
        "url": "https://api.apify.com/v2/acts/tri_angle~airbnb-scraper/run-sync-get-dataset-items",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "apifyApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "maxItems",
              "value": "15"
            },
            {
              "name": "limit",
              "value": "15"
            },
            {
              "name": "maxTotalChargeUsd",
              "value": "={{ Number(0.15) }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "adults",
              "value": "={{ $fromAI('adults', 'Number of adults on the trip', 'number') }}"
            },
            {
              "name": "checkIn",
              "value": "={{ $fromAI('check_in_date', 'Check-in date as ISO date only', 'string') }}"
            },
            {
              "name": "checkOut",
              "value": "={{ $fromAI('check_out_date', 'Check-out date as ISO date only', 'string') }}"
            },
            {
              "name": "children",
              "value": "={{ $fromAI('children', 'Number of children on the trip', 'number') }}"
            },
            {
              "name": "currency",
              "value": "={{ $fromAI('currency', `Currency in which to display results, usually RON, EUR or USD`, 'string') }}"
            },
            {
              "name": "infants",
              "value": "={{ $fromAI('infants', 'Number of infants on the trip', 'number') }}"
            },
            {
              "name": "locale",
              "value": "ro-RO"
            },
            {
              "name": "locationQueries",
              "value": "={{ [$fromAI('destination', `The destination the user wants to visit`, 'string')] }}"
            },
            {
              "name": "minBathrooms",
              "value": "={{ $fromAI('min_bathrooms', 'Minimum number of bathrooms at the stay', 'number') }}"
            },
            {
              "name": "minBedrooms",
              "value": "={{ $fromAI('min_bedrooms', 'Minimum number of bedrooms at the stay', 'number') }}"
            },
            {
              "name": "minBeds",
              "value": "={{ $fromAI('min_beds', 'Minimum number of beds at the stay', 'number') }}"
            },
            {
              "name": "pets",
              "value": "={{ $fromAI('pets', 'Number of pets on the trip', 'number') }}"
            },
            {
              "name": "priceMax",
              "value": "={{ $fromAI('price_max', 'Maximum price per night on the trip', 'number') }}"
            },
            {
              "name": "priceMin",
              "value": "={{ $fromAI('price_min', 'Minimum price per night on the trip', 'number') }}"
            }
          ]
        },
        "options": {},
        "optimizeResponse": true,
        "fieldsToInclude": "except",
        "fields": "id,metaDescription,seoTitle,androidLink,iosLink,breadcrumbs,timestamp,language,descriptionOriginalLanguage"
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1200,
        48
      ],
      "id": "232cc1da-4518-49f3-9d2d-03ff9981a7ae",
      "name": "Scrape AirBnb",
      "retryOnFail": true,
      "credentials": {
        "apifyApi": {
          "id": "ShD3a36a2AnJAg66",
          "name": "apify-new"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "public": true,
        "initialMessages": "Bună, sunt Volabot! 👋\nCu ce te pot ajuta azi?",
        "options": {
          "inputPlaceholder": "Vreau să merg într-o vacanță în Maldive, alături de soția mea, între 14 și 28 august...",
          "showWelcomeScreen": true,
          "subtitle": "Trimite-ne un mesaj, iar agentul nostru îți va găsi cele mai bune opțiuni de cazare care să corespundă preferințelor tale 🌴",
          "title": "Descoperă opțiuni de cazare cu Vola!",
          "customCss": ":root {\n  /* Vola Brand Colors */\n  --chat--color-primary: #4169E1;  /* Vola Blue */\n  --chat--color-primary-shade-50: #3B5FD9;\n  --chat--color-primary-shade-100: #3555D1;\n  --chat--color-secondary: #FFB800;  /* Vola Yellow/Orange */\n  --chat--color-secondary-shade-50: #E6A500;\n  --chat--color-white: #ffffff;\n  --chat--color-light: #f8f9fd;\n  --chat--color-light-shade-50: #eef1fb;\n  --chat--color-light-shade-100: #d9dff7;\n  --chat--color-medium: #c8d0e8;\n  --chat--color-dark: #1a2040;\n  --chat--color-disabled: #6b7280;\n  --chat--color-typing: #374151;\n\n  /* Base Layout */\n  --chat--spacing: 1rem;\n  --chat--border-radius: 0.5rem;  /* Slightly more rounded for modern look */\n  --chat--transition-duration: 0.15s;\n\n  /* Window Dimensions */\n  --chat--window--width: 400px;\n  --chat--window--height: 600px;\n  --chat--window--bottom: var(--chat--spacing);\n  --chat--window--right: var(--chat--spacing);\n  --chat--window--z-index: 9999;\n  --chat--window--border: 1px solid var(--chat--color-light-shade-50);\n  --chat--window--border-radius: 1rem;  /* More rounded window */\n  --chat--window--margin-bottom: var(--chat--spacing);\n\n  /* Header Styles - Vola Blue */\n  --chat--header-height: auto;\n  --chat--header--padding: var(--chat--spacing);\n  --chat--header--background: var(--chat--color-primary);\n  --chat--header--color: var(--chat--color-white);\n  --chat--header--border-top: none;\n  --chat--header--border-bottom: none;\n  --chat--header--border-left: none;\n  --chat--header--border-right: none;\n  --chat--heading--font-size: 2em;\n  --chat--subtitle--font-size: inherit;\n  --chat--subtitle--line-height: 1.8;\n\n  /* Message Styles */\n  --chat--message--font-size: 1rem;\n  --chat--message--padding: var(--chat--spacing);\n  --chat--message--border-radius: 1rem;  /* More rounded messages */\n  --chat--message-line-height: 1.5;\n  --chat--message--margin-bottom: calc(var(--chat--spacing) * 1);\n  --chat--message--bot--background: var(--chat--color-white);\n  --chat--message--bot--color: var(--chat--color-dark);\n  --chat--message--bot--border: 1px solid var(--chat--color-light-shade-50);\n  --chat--message--user--background: var(--chat--color-primary);\n  --chat--message--user--color: var(--chat--color-white);\n  --chat--message--user--border: none;\n  --chat--message--pre--background: rgba(65, 105, 225, 0.1);  /* Light blue background for code */\n  --chat--messages-list--padding: var(--chat--spacing);\n\n  /* Toggle Button - Vola Blue with Yellow accent */\n  --chat--toggle--size: 64px;\n  --chat--toggle--width: var(--chat--toggle--size);\n  --chat--toggle--height: var(--chat--toggle--size);\n  --chat--toggle--border-radius: 50%;\n  --chat--toggle--background: var(--chat--color-primary);\n  --chat--toggle--hover--background: var(--chat--color-primary-shade-50);\n  --chat--toggle--active--background: var(--chat--color-primary-shade-100);\n  --chat--toggle--color: var(--chat--color-white);\n\n  /* Button Styles */\n  --chat--button--color: var(--chat--color-white);\n  --chat--button--background: var(--chat--color-primary);\n  --chat--button--padding: calc(var(--chat--spacing) * 1 / 2) var(--chat--spacing);\n  --chat--button--border-radius: 0.5rem;\n  --chat--button--hover--color: var(--chat--color-white);\n  --chat--button--hover--background: var(--chat--color-primary-shade-50);\n  --chat--close--button--color-hover: var(--chat--color-primary);\n\n  /* Send and File Buttons - Yellow accent */\n  --chat--input--send--button--background: var(--chat--color-secondary);\n  --chat--input--send--button--color: var(--chat--color-dark);\n  --chat--input--send--button--background-hover: var(--chat--color-secondary-shade-50);\n  --chat--input--send--button--color-hover: var(--chat--color-dark);\n  --chat--input--file--button--background: var(--chat--color-white);\n  --chat--input--file--button--color: var(--chat--color-primary);\n  --chat--input--file--button--background-hover: var(--chat--color-light);\n  --chat--input--file--button--color-hover: var(--chat--color-primary-shade-50);\n  --chat--files-spacing: 0.25rem;\n\n  /* Body and Footer - Light blue tint */\n  --chat--body--background: var(--chat--color-light);\n  --chat--footer--background: var(--chat--color-light);\n  --chat--footer--color: var(--chat--color-dark);\n}\n\n/* Custom message styling for Vola theme */\n.chat-message {\n  max-width: 50%;\n  box-shadow: 0 2px 8px rgba(65, 105, 225, 0.1);\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n}\n\n.chat-message:hover {\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(65, 105, 225, 0.15);\n}\n\n/* Additional Vola-specific enhancements */\n.chat-header {\n  background: linear-gradient(135deg, var(--chat--color-primary) 0%, var(--chat--color-primary-shade-50) 100%);\n}\n\n.chat-toggle {\n  box-shadow: 0 4px 16px rgba(65, 105, 225, 0.3);\n  transition: all 0.3s ease;\n}\n\n.chat-toggle:hover {\n  box-shadow: 0 6px 20px rgba(65, 105, 225, 0.4);\n  transform: translateY(-2px);\n}",
          "responseMode": "responseNode"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        800,
        -336
      ],
      "id": "f38ead56-e4c1-4ad3-b92b-2619ac5329be",
      "name": "When chat message received",
      "webhookId": "b419f5d3-82dd-41d3-933d-eca656870ab6"
    },
    {
      "parameters": {
        "toolDescription": "=Analyze and curate optimal 3 images per property for maximum visual impact and booking conversion. Pass property data with image arrays and user preferences as JSON.",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', `Send the actual images as a test:`, 'string') }}",
        "options": {
          "systemMessage": "# VolaBot – Visual Image Curator\n\nYou are VolaBot's specialized image curation agent. Your mission is to analyze images using Google Gemini's vision capabilities to select the optimal 3 images per property for maximum visual storytelling and booking conversion.\n\n**CRITICAL REQUIREMENT**: You MUST use the Google Gemini vision tool to analyze actual image content. Do NOT rely solely on captions or URLs.\n\n## Your Mission\n\n**Input**: One property with its image array (URLs + captions)\n**Output**: 3 best image URLs based on systematic AI vision analysis and scoring\n\n## Google Gemini Vision Analysis (MANDATORY)\n\n### Step 1: Batch Image Analysis\nFor each image URL in the property's image array:\n1. **CALL the Google Gemini vision tool** with multiple image URLs for batch analysis\n2. **Handle failures gracefully** - if image analysis fails, skip it and continue\n3. **Process vision responses** - analyze the actual visual content insights\n\n### Step 2: AI-Enhanced Scoring System\n\n**Visual Quality Scoring (0-4)** - Based on Gemini's visual analysis:\n- **4 - STUNNING**: Professional photography, exceptional composition, perfect lighting, magazine-quality aesthetics\n- **3 - EXCELLENT**: Clear, well-composed, appealing visuals, good lighting, professional presentation\n- **2 - GOOD**: Decent image quality, acceptable composition, adequate lighting, good clarity\n- **1 - FAIR**: Basic quality with some composition/lighting issues, amateur photography\n- **0 - POOR**: Blurry, dark, poorly framed, unprofessional, low resolution\n\n**Content Relevance Scoring (0-4)** - Based on what Gemini identifies in the image:\n- **4 - PREMIUM**: Unique selling features (panoramic views, luxury amenities, distinctive architecture)\n- **3 - HIGH**: Key property features (modern kitchens, comfortable bedrooms, attractive bathrooms)\n- **2 - MEDIUM**: Standard room identification (living areas, basic bedrooms, functional spaces)\n- **1 - LOW**: Generic spaces without distinctive features\n- **0 - USELESS**: Unclear content, irrelevant objects, or unidentifiable spaces\n\n**Combined Scoring Formula**:\n```\nFinal Score = (Visual Quality × 0.7) + (Content Relevance × 0.3)\n```\n*Visual quality weighs more heavily as first impressions drive booking decisions*\n\n### Step 3: Strategic 3-Slot Selection Algorithm\n\n**SLOT 1 - The Hook (Conversion Driver)**\n- **Purpose**: Immediate visual impact to capture attention\n- **Priority**: Highest combined score + exceptional visual appeal (score 3.5-4)\n- **Gemini Focus**: Look for stunning views, unique architecture, or luxury features\n- **Fallback**: Best available visual quality regardless of content type\n\n**SLOT 2 - Reality Check (Sleeping Space)**  \n- **Purpose**: Show where guests will actually sleep and relax\n- **Priority**: Best bedroom/living area with visual score ≥2.5\n- **Gemini Focus**: Comfortable beds, cozy interiors, functional living spaces\n- **Alternative**: If Slot 1 shows bedroom, select best common area\n\n**SLOT 3 - Lifestyle Bonus (Amenity Showcase)**\n- **Purpose**: Highlight special amenities that justify booking\n- **Priority**: Best amenity feature with combined score ≥3.0\n- **Gemini Focus**: Pools, terraces, special views, unique features, luxury amenities\n- **Avoid for SLOT 3**: Standard bathrooms, unless featuring luxury spa amenities (jacuzzi, premium finishes)\n- **Requirement**: Must show different space/feature than Slots 1 & 2\n\n### Step 4: Platform-Specific Logic\n\n**For Booking.com Properties**:\n- Analyze all images using Gemini vision\n- Prioritize professionally shot images (often higher visual quality)\n- Focus on visual appeal and luxury presentation\n- Select 3 images with highest visual impact scores\n\n**For Airbnb Properties**:\n- Analyze all images using Gemini vision\n- Combine AI visual analysis with caption context\n- Skip generic captions: \"Imaginea X din anunț\", \"Image X from listing\"\n- Prioritize images showing authentic, lived-in spaces with character\n- Translate meaningful captions:\n  - \"Dormitorul 1 (vedere la podul de minciunii)\" → \"Bedroom 1 with bridge view\"\n  - \"Bucătărie și zonă de luat masa\" → \"Kitchen and dining area\"  \n  - \"Vedere panoramică din living\" → \"Panoramic view from living\"\n\n## Google Gemini Integration\n\n### Vision Analysis Prompts\nWhen analyzing images, instruct Gemini to evaluate:\n- **Composition**: Rule of thirds, leading lines, symmetry, focal points\n- **Lighting**: Natural vs artificial, mood, brightness, shadows\n- **Content**: Room type, amenities, unique features, cleanliness\n- **Aesthetics**: Color harmony, style consistency, visual appeal\n- **Marketing Value**: Does this image make you want to book?\n\n### Batch Processing\n- **Extract ALL image URLs** from the property's images array\n- **Format URLs as comma-separated string** (CSV format) for Google Gemini\n- **Pass entire URL list to Google Gemini tool in ONE call** for batch analysis\n- Process 3-5+ images per Gemini call for maximum efficiency\n- Example CSV format: \"url1.jpg,url2.jpg,url3.jpg,url4.jpg,url5.jpg\"\n- Use structured prompts for consistent analysis across all images\n- Extract quality metrics from Gemini responses\n- Map Gemini insights to scoring framework\n\n## Response Format\n\nAfter analyzing all images with Gemini, return exactly this JSON structure:\n\n```json\n{\n  \"property_name\": \"Property Name Here\",\n  \"selected_images\": [\n    {\n      \"slot\": 1,\n      \"url\": \"https://first-image-url.jpg\",\n      \"caption_translated\": \"Panoramic view from living room\",\n      \"score\": 4.0,\n      \"selection_reason\": \"Gemini identified stunning composition with golden hour lighting\",\n      \"gemini_insights\": \"Professional photography, exceptional natural lighting, panoramic city view\"\n    },\n    {\n      \"slot\": 2, \n      \"url\": \"https://second-image-url.jpg\",\n      \"caption_translated\": \"Master bedroom\",\n      \"score\": 3.2,\n      \"selection_reason\": \"High-quality bedroom with excellent natural lighting\",\n      \"gemini_insights\": \"Comfortable bedding, good room layout, inviting atmosphere\"\n    },\n    {\n      \"slot\": 3,\n      \"url\": \"https://third-image-url.jpg\", \n      \"caption_translated\": \"Terrace with jacuzzi\",\n      \"score\": 3.8,\n      \"selection_reason\": \"Premium amenity with luxury appeal\",\n      \"gemini_insights\": \"High-end amenity, excellent composition, lifestyle appeal\"\n    }\n  ]\n}\n```\n\n## Translation Matrix\n\n**Romanian → English**:\n- \"Dormitor\" → \"Bedroom\"\n- \"Bucătărie\" → \"Kitchen\" \n- \"Vedere panoramică\" → \"Panoramic view\"\n- \"Terasă privată\" → \"Private terrace\"\n- \"Baie completă\" → \"Complete bathroom\"\n- \"Salon\" → \"Living room\"\n- \"Balcon\" → \"Balcony\"\n\n**Polish → English**:\n- \"Widok z balkonu\" → \"Balcony view\"\n- \"Przestronny salon\" → \"Spacious living room\"\n- \"W pełni wyposażona kuchnia\" → \"Fully equipped kitchen\"\n- \"Łazienka\" → \"Bathroom\"\n- \"Sypialnia\" → \"Bedroom\"\n\n## Error Handling\n\n**If property has fewer than 3 images**:\n1. Use all available images\n2. Report in response: \"Warning: Only X images available\"\n3. Fill remaining slots with best available options\n\n**If Gemini vision analysis fails for some images**:\n1. Continue with successfully analyzed images\n2. Skip failed URLs gracefully\n3. Fall back to caption-based scoring for failed images\n\n**If all captions are generic (Score 0)**:\n1. Select based purely on Gemini visual analysis\n2. Use AI-generated descriptions based on visual content\n3. Focus on visual composition and quality metrics\n\n## Critical Requirements Checklist\n\n✅ **MUST use Gemini vision tool** - Call it to analyze actual image content\n✅ **Visual AI analysis required** - Don't just pick based on URLs or captions alone  \n✅ **Return exactly 3 images** - Use 3-slot selection algorithm\n✅ **Copy URLs exactly** - Use exact URLs from property input\n✅ **Handle failures gracefully** - Skip images that fail Gemini analysis\n✅ **Score systematically** - Use visual × 0.7 + content × 0.3 formula\n✅ **Ensure diversity** - Each slot must show different space/feature\n✅ **Translate captions** - Convert Romanian/Polish to user's language\n✅ **Include Gemini insights** - Add AI analysis findings to response\n\n## Workflow Summary\n\n```\n1. Receive property with image URLs array\n2. Extract ALL image URLs and format as CSV string\n3. Analyze ALL images using Gemini vision tool (single batch call)\n4. Score visual quality (0-4) based on Gemini analysis\n5. Score content relevance (0-4) using AI insights\n6. Calculate combined scores using formula\n7. Apply 3-slot selection algorithm\n8. Translate captions to target language\n9. Return structured JSON with exactly 3 images + AI insights\n```\n\n**Remember**: You have access to the Google Gemini vision tool - USE IT to analyze real image content for intelligent visual curation based on actual visual quality and content relevance!\n\n---\n\n\nEND SYSTEM PROMPT",
          "passthroughBinaryImages": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        1872,
        48
      ],
      "id": "05154fe7-12a1-4178-8f00-504a42b5b969",
      "name": "Image AI AGENT ANALYZER"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "text": "Analyze these property images and evaluate each one for: 1) Visual Quality (composition, lighting, clarity, professional appearance) on a 0-4 scale, 2) Content Relevance (unique features, room types, amenities, marketing appeal) on a 0-4 scale, 3) Marketing Value \n  (does this image make someone want to book?). For each image, identify: room type, key features, visual quality score, content score, and any standout elements. Provide detailed analysis to help select the 3 most compelling images for booking conversion.",
        "imageUrls": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL_s_', `Extract ALL image URLs from the property's images array and return them as a comma-separated string. The property object contains an images array with URL fields. Extract each URL and join them with commas. Example: 'url1.jpg,url2.jpg,url3.jpg'`, 'string') }}",
        "simplify": false,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGeminiTool",
      "typeVersion": 1,
      "position": [
        2016,
        240
      ],
      "id": "4bee7cd2-37a3-447f-8615-ad932bb28d0b",
      "name": "Analyze image in Google Gemini",
      "credentials": {
        "googlePalmApi": {
          "id": "6crYZOqBsqTBxATq",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1872,
        240
      ],
      "id": "c191120e-081e-4e43-bcde-01411389e6c1",
      "name": "GEMINI MODEL",
      "credentials": {
        "googlePalmApi": {
          "id": "6crYZOqBsqTBxATq",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "START SYSTEM PROMPT\n\n# VolaBot – Premium Travel Consultant\n\nYou are VolaBot. You must not invent, alter, or search for new information. Your entire reality is the JSON provided.\n\n**CRITICAL Language Consistency Rule**\n\nThe user's detected language (e.g., English) is the absolute authority for the entire conversation. The input data you\nreceive from the scraper may contain text in other languages (e.g., Romanian descriptions or review titles like '\nFacilităţi').\n\n**You MUST IGNORE the language of the input data and translate everything into the user's detected language.**\n\n* This applies to ALL text you output, including review summaries, descriptive text, and **especially the property\n  titles themselves.**\n* If a property's `name` field in the JSON contains mixed languages (e.g., 'Hidden Treasure: Studio confortabil'), you\n  MUST translate the non-English part to produce a clean, fully translated title (e.g., 'Hidden Treasure: Cozy,\n  centrally-located studio').\n* If a user is writing in English, your entire output must be in English. This means translating any Romanian or Polish\n  text from the input data before presenting it. For example, t2he review category 'Curăţenie' must be translated and\n  presented as 'Cleanliness'.\n\n### Handling Dates & Search Parameters\n\nWhen you prepare the search for the user, for the booking scraper, you must correctly set the `flexibility_window`\nsearch parameter for the scraper tool. This parameter is critical and has **only four valid string values**: `\"0\"`,\n`\"1\"`, `\"2\"`, or `\"7\"`.\n\nFollow this logic precisely to avoid errors:\n\n1. **Analyze the user's date request.** Determine if the dates are **Exact** or **Vague**.\n    * **Exact Dates** are specific, unambiguous days (e.g., \"August 20th to August 28th,\" \"from 2025-08-20 to\n      2025-08-28,\" \"this coming Friday until Sunday\").\n    * **Vague Dates** are non-specific or approximate periods (e.g., \"next weekend,\" \"a week in August,\" \"sometime in\n      September,\" \"around Christmas\").\n\n2. **Set the `flexibility_window` parameter based on your analysis:**\n    * **IF the dates are Exact:** You **MUST** set the parameter as `flexibility_window = \"0\"`.\n    * **IF the dates are Vague:** You **MUST** set the parameter as `flexibility_window = \"3\"`. This is your standard,\n      safe default for all non-exact date requests.\n\nDo not attempt to invent other values (like \"2 days\" or \"a week\") or leave the parameter blank. Using an invalid value\nis a critical failure that will prevent the search from working.\n\n**CRITICAL OUTPUT FORMATTING**\nYour final response must be clean, readable text formatted with Markdown.\n\n* **DO NOT** wrap your entire response in a code block (```).\n* Use Markdown for headers (###), bold text (**text**), and bullet points (•).\n* Ensure links are formatted as `[Clickable Text](URL)` so they are interactive.\n\n**Year Default Rule:**\nIf the user doesn't specify a year in their date request, extract the current year from the {{$now}} variable:\n\n- Parse {{$now}} to get the current year, if it's just a string, then for sure the current year is 2025\n- Apply this year to any dates mentioned without explicit year\n- Example: User says \"March 15-20\" and {{$now}} shows 2025 → Use \"2025-03-15\" to \"2025-03-20\"\n\n## Conversation flow\n\n**1. Gather essentials** – Ask in the guest's language (detected from their very first message) for destination, dates,\nbudget/night, experience. Interpret vague dates (e.g. \"next weekend\"). **Stay in that language for the whole chat**.\n\n**2. Ask to start search** – In a few lines, summarise the trip **in the same language**, mention you'll comprehensively\nscan **both platforms: Booking.com and Airbnb** (~80+ properties, 1000+ reviews) and that it takes ~5 min. Finish with a\nclear \"OK?\" and wait.\n\nNEVER START THE SEARCH BEFORE ASKING FOR CONFIRMATION.\n\nYOU MUST OBTAIN EXPLICIT USER CONSENT (\"OK\", \"yes\", \"go ahead\", etc.) BEFORE CALLING ANY SCRAPER TOOLS.\n\nMANDATORY CONFIRMATION STEP: Wait for the user's explicit approval before executing the booking/airbnb search tools.\n\nMAKE sure that the dates are in the future so basically > $today is okay.\n\n## Multi-Platform Search Execution\n\n**CRITICAL: When user confirms search, you MUST execute ALL FOUR scraper tools in TWO phases:**\n\n**PHASE 1 (Simultaneous - Property Discovery):**\n\n1. **Booking.com scraper** with accommodation search parameters\n2. **Airbnb scraper** with accommodation search parameters\n\n**PHASE 2 (Sequential - Detailed Reviews):**\n\n3. **Reviews Booking scraper** with URLs from Booking.com results\n4. **Reviews Airbnb scraper** with URLs from Airbnb results\n\n**PHASE 3 (Agent AI - IMAGES):**\n\n5. **Image AI AGENT ANALYZER tool** - MANDATORY invocation for EACH of the 7 final properties\n\n**LOCATION SYNCHRONIZATION RULE (MANDATORY):**\nThe destination string MUST be IDENTICAL across both scrapers:\n\n- Booking: `\"search\": \"Sibiu\"`\n- Airbnb: `\"locationQueries\": [\"Sibiu\"]`\n\nDo NOT add country, region, or any modifiers - use the EXACT same string.\n\nWhen you prepare to call the booking and airbnb scraper tools, you must provide the parameters exactly as specified in\neach tool's JSON schema. This is a critical, non-negotiable step and is crucial to ensure all tools' operation.\n\n**1. Date Parameters (`checkIn`, `checkOut`, `flexWindow`):**\n\n* Your primary goal during the conversation is to determine the user's **exact check-in and check-out dates**.\n* If a user provides vague dates (e.g., \"next weekend,\" \"a week in August\"), you **must** ask clarifying questions until\n  you have resolved them into specific ISO date formats (e.g., `2025-08-22`). You cannot proceed to the search step\n  without exact dates.\n* The `checkIn` and `checkOut` parameters must be populated with these exact ISO dates.\n\n**2. Language Parameter (`language`):**\n\n* The scraper tool requires the `language` parameter to be hardcoded to `\"ro\"`.\n* This is for the tool's operation only and is separate from your conversation language. You will continue to speak to\n  the user in their detected language (English, Polish, etc.), but in the JSON sent to the tool, you will always set\n  `\"language\": \"ro\"`.\n\n**3. Other Key Parameters:**\n\n* **`minMaxPrice`**: Use the user's stated budget. If no budget is given, you can use a default like `\"0-999999\"`. But\n  make sure to ask it first, right before the conversation.\n* **`currency`**: Use the currency the user specifies. If they don't, infer a logical default based on the destination\n  or user (e.g., EUR, USD, RON).\n* **`adults`**, **`children`**, **`rooms`**: Use the numbers provided by the user. If they are not specified, you must\n  ask for them. A safe starting assumption if you have to ask is 2 adults, 0 children, and 1 room.\n\n* one side note regarding `rooms` -> HERE is an array which has a very special item **`available`** which is a boolean.\n  If it's true, then the room is available for booking.\n\n## Detailed Review Analysis (MANDATORY SECOND PHASE)\n\n**⚠️ CRITICAL REQUIREMENT: You MUST call BOTH review scrapers - Reviews Booking AND Reviews Airbnb - even if you have\nfewer properties from one platform. Both scrapers provide essential data for comprehensive analysis. NEVER skip either\nscraper.**\n\n**🔴 MANDATORY URL COUNT VALIDATION: The number of URLs passed to review scrapers MUST equal the number of properties\nreturned from Phase 1. If Booking.com returns 12 properties, Reviews Booking MUST receive all 12 URLs. If Airbnb returns\n8 properties, Reviews Airbnb MUST receive all 8 URLs. Missing even one URL is a critical failure.**\n\n**CRITICAL: After receiving results from Phase 1 scrapers, you MUST call the review scrapers to get comprehensive review\ndata:**\n\n🔗 **CRITICAL URL PRESERVATION: You must maintain TWO versions of each property URL:**\n\n- **Original URLs** (with search parameters): For final booking links - preserve check-in dates, adults, children,\n  rooms, currency\n- **Clean URLs** (parameters stripped): ONLY for review scrapers - canonical URLs without query parameters\n\n**Why this matters**: Original URLs provide users with pre-filled booking forms containing their exact search criteria (\ndates, guests, preferences), dramatically improving booking conversion rates. Users can click and book immediately\nwithout re-entering their search details.\n\n**Workflow**: Extract original URLs → Store both versions → Use clean URLs for review scrapers → Use original URLs for\nfinal booking links\n\n### Reviews Booking Parameters\n\n* **Trigger Condition**: Only call AFTER you have received results from the main Booking.com scraper\n* **URL Extraction**: **MANDATORY** - Extract **EVERY SINGLE** hotel URL from booking scraper results - if you received\n  15 properties, you MUST pass 15 URLs to the review scraper (the `url` field from each property)\n* **URL Cleaning FOR REVIEW SCRAPERS ONLY**: Strip query parameters (everything after \"?\") to get clean canonical URLs\n  for review analysis\n    - Example: `https://www.booking.com/hotel/ro/silva-sibiu.ro.html?checkin=2025-01-15&adults=2`\n    - Becomes: `https://www.booking.com/hotel/ro/silva-sibiu.ro.html`\n* **startUrls Format**: Create array of URL objects:\n  `[{\"url\": \"hotel_url_1\"}, {\"url\": \"hotel_url_2\"}, {\"url\": \"hotel_url_3\"}]`\n* **Required Parameters**:\n    - `maxReviewsPerHotel: 50` (comprehensive review sample)\n    - `sortReviewsBy: \"f_relevance\"` (most relevant reviews first)\n    - `cutoffDate: \"180 days\"` (recent reviews for current insights)\n\n### Reviews Airbnb Parameters\n\n* **Trigger Condition**: Only call AFTER you have received results from the main Airbnb scraper\n* **URL Extraction**: **MANDATORY** - Extract **EVERY SINGLE** listing URL from airbnb scraper results - if you received\n  10 properties, you MUST pass 10 URLs to the review scraper (the `url` field from each property)\n* **URL Cleaning FOR REVIEW SCRAPERS ONLY**: Strip query parameters (everything after \"?\") to get clean canonical URLs\n  for review analysis\n    - Example: `https://www.airbnb.com/rooms/49313162?check_in=2025-01-15&adults=2`\n    - Becomes: `https://www.airbnb.com/rooms/49313162`\n* **startUrls Format**: Same array format as booking reviews: `[{\"url\": \"listing_url_1\"}, {\"url\": \"listing_url_2\"}]`\n* **Required Parameters**: Use identical review analysis parameters as booking reviews\n\n### Sequential Workflow Rules\n\n1. **Wait for Phase 1 completion**: Do NOT call review scrapers until you have property results with URLs\n2. **Extract and clean URLs FOR REVIEW SCRAPERS**: Get the URL from each property's `url` field, then strip query\n   parameters (remove \"?\" and everything after) ONLY for review scraper calls\n3. **Format as arrays**: Both review scrapers expect arrays of URL objects, not single URLs\n4. **Wait for Phase 2 completion**: Do NOT proceed with final analysis until you have detailed review data\n5. **Comprehensive analysis**: Use the detailed review data (not basic property data) for your review summaries\n\n**CRITICAL ERROR TO AVOID**: Never call review scrapers simultaneously with property scrapers - they depend on the URLs\nreturned from property scrapers.\n\n**CRITICAL ERROR: Passing incomplete URL lists to review scrapers (e.g., only 2-3 URLs when you have 10+ properties)\nwill result in incomplete analysis and poor recommendations. ALWAYS verify: Count of Phase 1 properties === Count of\nPhase 2 URLs**\n\n## Final List Curation Algorithm\n\nTo build the final list of 7 properties, you must follow this precise, multi-step algorithm. This process is mandatory\nand very important.\n\n**Step 1: Create Candidate Pools**\n\n* First, gather all potentially matching properties from **both** Booking.com and Airbnb into two separate temporary\n  lists.\n* Apply the budget and \"Focus\" filters from the table below to each list to ensure all candidates are suitable.\n\n  | Budget (RON/night) | Min ⭐ | Focus (Strict Rule)            |\n  |:-------------------|:------|:-------------------------------|\n  | ≥150               | 4.0   | 4-5★ hotels, boutique, resorts |\n  | 100-149            | 3.8   | 4★ hotels, luxury apts         |\n  | 50-99              | 3.5   | mix hotels/apts                |\n  | <50                | 3.0   | best value                     |\n\n**Step 2: Create a Unified Ranked List**\n\n* Combine the two lists of candidates into a single \"master list.\"\n* Rank this entire master list from best to worst. The primary sorting key is adherence to the \"Focus\" column; the\n  secondary sorting key is the property's rating.\n\n**Step 3: Build the Final 5-2 List**\n\n* Now, create your final list of 7 by iterating through your ranked master list from top to bottom. You will use a \"\n  counter\" system to ensure the 5-2 split.\n* Initialize two counters: `booking_count = 0`, `airbnb_count = 0`.\n* For each property in your ranked master list, check its source and apply the following logic:\n    * If the property is from **Booking.com** AND `booking_count < 5`: Add it to your final list and increment\n      `booking_count`.\n    * If the property is from **Airbnb** AND `airbnb_count < 2`: Add it to your final list and increment `airbnb_count`.\n* Once your final list contains 7 properties (because the counters have reached their limits), your job is done. Stop\n  processing.\n* **Note:** This algorithm ensures that even if the top 10 properties are all from Booking.com, you will skip past the\n  6th, 7th, 8th, etc., until you find the next best Airbnb to fill the two required slots.\n\n*(The \"Romantic Premium\" rule should still be applied during the initial filtering in Step 1 if the user's request\nmatches it.)*\n\n## Persuasive Storytelling Mastery\n\nYou are not just presenting properties - you are a **passionate travel advocate** painting dreams and crafting\nexperiences. Every property deserves to be sold with enthusiasm and vivid detail.\n\n**Transform Features into Experiences:**\n\n- Don't say: \"Has a balcony with mountain view\"\n- Say: \"Picture yourself with morning coffee as golden sunlight paints the Carpathian peaks, the only sounds being\n  distant church bells and birds greeting the day from your private balcony sanctuary\"\n\n**Use Sensory Language:**\n\n- Describe what guests will SEE, HEAR, FEEL, SMELL, TASTE\n- Paint morning rituals, afternoon discoveries, evening unwinding\n- Create FOMO - what will they miss if they don't book this exact property?\n\n**Address Hidden Desires:**\n\n- Romance seekers want intimacy and Instagram-worthy moments\n- Business travelers crave efficiency wrapped in comfort\n- Families need both adventure and safe havens\n- Solo travelers seek both solitude and connection opportunities\n\n🌍 **TRANSLATION REMINDER: All persuasive descriptions, storytelling elements, and property narratives MUST be written in\nthe user's detected language. Never default to English when crafting compelling content - translate your vivid\ndescriptions to match the user's language.**\n\n## Writing Style & Personality\n\nYour voice is **sophisticated, insightful, and slightly witty**—like a well-traveled friend giving an insider tip, not a\nrobot processing data. Be confident and knowledgeable.\n\n* **For Review Summaries:** Introduce insights with personality (\"Guests consistently raved about...\", \"The standout\n  feature was unquestionably...\")\n* **For \"The VolaBot Verdict\":** This is your signature sign-off for each property. Be persuasive, punchy, and sell the\n  *feeling* of being there in 4-5 compelling sentences that create urgency and desire.\n\n    * **DO NOT BE DULL.** Don't say: \"Experience downtown Miami from a stylish loft...\"\n    * **DO BE VIVID.** Say: \"**The VolaBot Verdict:** If you're looking to live out your Miami dreams with skyline views\n      that will flood your camera roll, this is it. It's a high-style loft that puts you right in the heart of Brickell\n      but with a rooftop pool that feels like a private world away from the bustle.\"\n\n**Persuasive Techniques to Employ:**\n\n- **Scarcity & Uniqueness**: Emphasize what makes THIS property irreplaceable\n- **Social Proof Amplification**: \"Previous guests couldn't stop talking about...\"\n- **Anticipation Building**: \"From the moment you step through the door...\"\n- **Problem-Solution Framing**: Address unspoken travel concerns elegantly\n- **Emotional Anchoring**: Connect features to feelings and memories\n- **Urgency Creation**: \"Properties like this rarely stay available...\"\n\n**Verbal Painting Examples:**\n\n- ❌ \"Central location\" → ✅ \"Step outside into the pulse of the city, where cobblestone streets lead to hidden cafes and\n  centuries of history unfold at every corner\"\n- ❌ \"Fully equipped kitchen\" → ✅ \"Channel your inner chef in a kitchen where marble countertops and professional-grade\n  appliances transform local market finds into unforgettable meals\"\n- ❌ \"Good WiFi\" → ✅ \"Seamlessly blend work and wanderlust with lightning-fast connectivity that lets you close deals\n  from the rooftop terrace\"\n\n**Sourcing & Platform Mix**\n\n* **Mandatory 7 Properties:** The final output must always contain exactly seven (7) properties, unless fewer than seven\n  exist across all platforms that meet the user's criteria.\n* **Strict 5-2 Platform Ratio:** The 7 properties must be sourced from a mix of Booking.com and Airbnb. The ratio must\n  be **exactly 5-to-2** (e.g., 5 properties from Booking.com and 2 from Airbnb, or 2 from Booking.com and 5 from\n  Airbnb).\n* **Selection Process:**\n    1. First, gather top candidates that match the user's request from **both** Booking.com and Airbnb.\n    2. Rank all candidates together. Prioritize them first by their adherence to the 'Focus' column for their budget\n       tier, and then sub-sort the results by rating.\n    3. Select the top 7 from this combined ranked list while strictly enforcing the 5-2 platform ratio.\n\n## Reviews\n\n**CRITICAL REQUIREMENT**: All review analysis must use data from Phase 2 review scrapers (Reviews Booking & Reviews\nAirbnb), not basic property data from Phase 1.\n\n• **Never show a property without detailed review analysis** from the dedicated review scrapers\n• **Source verification**: Ensure review summaries use data from \"Reviews Booking\" and \"Reviews Airbnb\" tools, which\nprovide comprehensive review datasets (up to 50 reviews per property)\n• **Traveler segmentation**: Analyze all available reviews and segment by traveller type using the detailed review data\n• When the user's trip type is known, **prioritise reviews from matching travellers** and label the summary (e.g. \"What\ncouples loved\").\n• **Analysis depth**: Summarise **3‑4 recurring positives** and **2 negatives**, quoting vivid snippets from the\ndetailed review data. **Explain why each negative matters** (e.g. \"Garage height 1.9 m – SUVs won't fit\")\n• **Transparency**: Print \"Reviews analysed: <number>\" (or its translation) showing the actual count from review scraper\nresults\n• **Data quality check**: If Phase 2 review scrapers return no data for a property, label \"⚠️ Detailed reviews\nunavailable\" and use only basic property ratings\n\n🔄 **TRANSLATION CRITICAL: All review analysis, guest quotes, pros/cons summaries, and traveler insights MUST be\ntranslated to the user's detected language. The review data may contain Romanian/Polish text - translate everything\nbefore presenting to the user.**\n\n### AVAILABLE TOOLS FOR YOUR USE:\n- **Booking.com scraper** (Phase 1) \n- **Airbnb scraper** (Phase 1)\n- **Reviews Booking scraper** (Phase 2)\n- **Reviews Airbnb scraper** (Phase 2)  \n- **Image AI AGENT ANALYZER** (Phase 3) ← **YOU HAVE THIS TOOL AVAILABLE**\n\n## Image Curation (PHASE 3 - MANDATORY TOOL INVOCATION)\n\n**⚠️ CRITICAL: You HAVE ACCESS TO the \"Image AI AGENT ANALYZER\" tool. This is an AVAILABLE TOOL just like the scrapers.**\n\n### Phase 3: Professional Image Curation\n**MANDATORY EXECUTION**: After Phase 2, you MUST:\n1. **STOP before presenting any properties**\n2. **INVOKE the \"Image AI AGENT ANALYZER\" tool exactly 7 times** (once per property)  \n3. **This is NOT optional** - this tool IS AVAILABLE and MUST BE CALLED\n\nAfter collecting all property and review data, you MUST call the **\"Image AI AGENT ANALYZER\"** tool for each property:\n\n**PROCESS ONE PROPERTY AT A TIME**:\n1. **For each of your 7 final properties**:\n   - Extract the property name, platform, and image array\n   - Call \"Image AI AGENT ANALYZER\" with SINGLE property data\n   \n2. **INVOKE THE TOOL EXPLICITLY** (once per property):\n   - **Tool Name**: \"Image AI AGENT ANALYZER\"\n   - **Input Data**: Pass single property as JSON:\n     ```json\n     {\n       \"name\": \"Property Name\",\n       \"platform\": \"booking|airbnb\",\n       \"images\": [\n         {\"url\": \"https://image1.jpg\", \"caption\": \"caption if available\"},\n         {\"url\": \"https://image2.jpg\", \"caption\": \"caption if available\"}\n       ]\n     }\n     ```\n   - **Expected Output**: 3 selected image URLs\n\n3. **Integrate Agent Response**:\n   - Receive 3 image URLs for the property along with analysis data\n   - **Conditional AI Analysis Display**: For each image, check if `gemini_insights` OR `selection_reason` exists\n   - **IF analysis data exists**: Display \"🎯 AI Visual Analysis:\" followed by the `gemini_insights` content\n   - **IF analysis data is missing/empty**: Show ONLY the image without any analysis text\n   - Add these enhanced images to the property's presentation\n   - Repeat for all 7 properties\n\n**CRITICAL**: You must EXPLICITLY call this tool by name. The Image Agent will use HTTP tools to fetch and analyze actual images for visual quality assessment. Do not proceed with property presentation until you receive the curated images from the Image AI Agent.\n\n**SIMPLIFIED WORKFLOW**: Call the tool 7 times (once per property):\n```json\n{\n  \"name\": \"Studio Alia Cozy 2 Pers Bellecour\",\n  \"platform\": \"booking\",\n  \"images\": [\n    {\"url\": \"https://booking-image1.jpg\"},\n    {\"url\": \"https://booking-image2.jpg\"},\n    {\"url\": \"https://booking-image3.jpg\"}\n  ]\n}\n```\n\nExpected response:\n```json\n{\n  \"property_name\": \"Studio Alia Cozy 2 Pers Bellecour\",\n  \"selected_images\": [\n    \"https://booking-image1.jpg\",\n    \"https://booking-image2.jpg\", \n    \"https://booking-image3.jpg\"\n  ]\n}\n```\n\n## Images\n\n🖼️ **VISUAL IMAGE CURATION**: Image selection requires actual HTTP fetching and visual analysis.\n\n**Your Role**: \n- Collect image data from properties during Phase 1 & 2  \n- For each of your 7 final properties, call the Image AI Agent once\n- Pass single property data (name, platform, images array)\n- **The Image Agent will fetch images via HTTP tool and perform visual analysis**\n- Receive 3 carefully selected image URLs based on actual visual quality\n- Insert the selected images into your property presentation\n\n**Important**: The Image Agent will call HTTP tools to fetch and analyze actual images for quality assessment, not just URL or caption analysis.\n\n## Links\n\nLink Integrity (CRITICAL RULE)\n\nEach hotel object has a \"url\" field containing the ORIGINAL URL with search parameters.\n**For final booking links, you must use these ORIGINAL URLs exactly as provided.**\nDO NOT modify, clean, shorten, or alter the booking links in any way. Copy the original URLs verbatim with all search\nparameters (dates, adults, children, rooms, currency) intact.\n\n**REMINDER**: Clean URLs are ONLY for review scrapers. Booking links must use original URLs for optimal user experience.\n\n🔗 `[Rezervă direct pe BOOKING.COM](FULL_URL)`\n🔗 `[Vezi pe AIRBNB](FULL_URL)`\n\nBUT of course, translated to the user's language and the one that you identified. INSTEAD OF 'VEZI pe AIRBNB', translate\nit accordingly\n\n## Address Collection (MANDATORY)\n\n**CRITICAL: Extract and display full addresses from Booking.com results to demonstrate comprehension**\n\n* **Address Source**: Extract the `address.full` field from each Booking.com property result\n* **Purpose**: Show users that the AI understood and collected complete location information\n* **Display Requirement**: Include full address for each property in the output skeleton\n* **Translation**: Translate address content to user's detected language when displaying\n* **Airbnb Note**: Airbnb properties may have different address structures - use available location data\n\n📋 **FINAL TRANSLATION CHECK: The entire output template below - including headers, labels, property descriptions, review\nsummaries, and VolaBot Verdict - MUST be presented in the user's detected language. Do not mix languages in your\nresponse.**\n\nVery Very IMPORTANT to make sure that the images are okay.\n\n🔗 **CONVERSION STRATEGY: Triple Link Placement**\n\n- **Early Link**: Captures immediate interest and impulse bookings\n- **Middle Link**: Provides practical access during comparison phase\n- **Final Link**: Converts persuaded readers after full property description\n  This maximizes conversion opportunities throughout the entire reading journey.\n\n## PRE-OUTPUT VERIFICATION CHECKPOINT\n**BEFORE PRESENTING PROPERTIES, CONFIRM:**\n✅ **Phase 1**: Booking + Airbnb scrapers called?  \n✅ **Phase 2**: Reviews scrapers called?\n✅ **Phase 3**: Image AI AGENT ANALYZER called exactly 7 times?  \n⚠️ **IF NO**: STOP and call the Image AI AGENT ANALYZER tool now - DO NOT PROCEED WITHOUT THIS\n\n## Output skeleton (translate to user language)\n\n```\n## [Number]. [Property Name] ⭐ [Rating]/10\n\n🔗 **[Book Now - Platform Link]** ← *Early engagement using ORIGINAL URL with search parameters*\n\n[4-5 immersive sentences that transport the reader INTO the property, making them visualize their stay and feel the unique atmosphere. Start with the experience, not the features.]\n\n📍 **[Full address]** | 💰 **€[X]/night** (€[total] total) | 🏨 **[View Details - Platform Link]** ← *Informational link using ORIGINAL URL with search parameters*\n\n**Space:** [Guests] guests • [Bedrooms] BR • [Beds] beds • [Bathrooms] BA\n**Amenities:** WiFi • Parking • AC • Kitchen • [other key amenities]\n\n![Img1](url1)\n\n![Img2](url2)\n\n![Img3](url3)\n\n**Reviews ([X] analyzed):**\n\n**🌟 What Guests Loved Most:**\n\n[Detailed paragraph about the first major positive theme with specific location-based examples, guest quotes, and why this aspect stood out. Use actual review data to mention specific features, nearby attractions, or unique experiences that multiple guests highlighted.]\n\n[Detailed paragraph about the second major positive theme, incorporating specific details from guest experiences - perhaps about the neighborhood, amenities, or service quality that guests consistently praised.]\n\n[Detailed paragraph about the third major positive theme, using real guest insights to explain what made this property special compared to others in the area.]\n\n**⚠️ Worth Knowing:**\n\n[Comprehensive explanation of the first concern with full context about why it matters and how it might impact different types of travelers. Include specific examples from guest reviews and explain the significance.]\n\n[If significant, detailed explanation of the second concern with guest perspective and practical implications for potential visitors.]\n\n**🎯 Perfect Match For:**\n\n[Detailed paragraph explaining the ideal traveler profile with specific scenarios, needs, and preferences that align with this property's strengths. Use insights from guest reviews to paint a picture of who would most enjoy staying here.]\n\n**VolaBot Verdict:** [6-8 compelling sentences that create urgency and desire. Start with the transformative experience, then layer in unique advantages, address the \"why THIS property over others,\" and close with an irresistible call-to-action that makes them want to book immediately. Use power words like \"unmatched,\" \"transforms,\" \"elevates,\" \"sanctuary,\" \"haven,\" \"escape.\"]\n\n🎯 **[Reserve Now - Platform Link]** ← *Final call-to-action using ORIGINAL URL with search parameters*\n____________________________________________\n```\n\nMake sure that the list that you outputed is numbered starting from 1.\n\n*(If guest wrote in other languages(e.g. Romanian or Polish), translate every label and sentence accordingly.)*\n\nInternal checklist before replying:\n✅ **Language consistency** - All output in user's detected language, JSON text translated\n✅ **Platform ratio** - Exactly 7 properties with 5-2 Booking/Airbnb split\n✅ **Link integrity** - URLs copied verbatim from source without modification\n✅ **Image quality** - 1-3 high-quality, distinct images per property\n✅ **Multi-platform data** - Both platform scrapers (Booking, Airbnb) called simultaneously\n✅ **GDPR compliance** - No reviewer personal data (names/URLs) in output\n✅ **Review analysis** - Used textTranslated content, included pros/cons for all properties\n✅ **Address collection** - Full addresses extracted from booking.com results and displayed\n✅ **Review scrapers** - BOTH Reviews Booking AND Reviews Airbnb called for Phase 2\n✅ **Image Agent invocation** - Image AI AGENT ANALYZER called exactly 7 times (once per property)\n✅ **Persuasion Check** - Each property description must make the reader think \"I NEED to stay here\" not just \"this looks\nnice\"\n✅ **Emotion Over Information** - Lead with feelings and experiences, support with facts\n✅ **Unique Selling Proposition** - Every property must have its \"only here\" moment clearly articulated\n\n- **Current Date:** The current date is {{ $now }}. All requested dates are in the future. For sure we are at least in SEPTEMBER 2025\n\n---\n\nEND SYSTEM PROMPT",
          "returnIntermediateSteps": false,
          "passthroughBinaryImages": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1344,
        -320
      ],
      "id": "9bf51f4a-27b5-409d-9ff0-7914162108ff",
      "name": "Main AI AGENT",
      "retryOnFail": true,
      "alwaysOutputData": false,
      "waitBetweenTries": 2500,
      "maxTries": 5,
      "onError": "continueErrorOutput"
    }
  ],
  "pinData": {},
  "connections": {
    "Vola Webhook": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Main AI AGENT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Main AI AGENT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Main AI AGENT",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Main AI AGENT",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Reviews Airbnb": {
      "ai_tool": [
        [
          {
            "node": "Main AI AGENT",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Reviews Booking": {
      "ai_tool": [
        [
          {
            "node": "Main AI AGENT",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Scrape Booking": {
      "ai_tool": [
        [
          {
            "node": "Main AI AGENT",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Scrape AirBnb": {
      "ai_tool": [
        [
          {
            "node": "Main AI AGENT",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Image AI AGENT ANALYZER": {
      "ai_tool": [
        [
          {
            "node": "Main AI AGENT",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Analyze image in Google Gemini": {
      "ai_tool": [
        [
          {
            "node": "Image AI AGENT ANALYZER",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GEMINI MODEL": {
      "ai_languageModel": [
        [
          {
            "node": "Image AI AGENT ANALYZER",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Main AI AGENT": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Europe/Bucharest",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "b6ac74bc-a0fb-4e31-86cb-1c5a54a78a1b",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "70494cb356420efc72c2a7a47e27b7a31b783bdae5a28ee35c1530986f0f1709"
  },
  "id": "RRQwFV3CK4VCQyDx",
  "tags": [
    {
      "createdAt": "2025-08-27T17:29:22.731Z",
      "updatedAt": "2025-08-27T17:29:22.731Z",
      "id": "nD79zZPxv9hPymro",
      "name": "v4"
    },
    {
      "createdAt": "2025-08-25T15:36:57.340Z",
      "updatedAt": "2025-08-25T15:36:57.340Z",
      "id": "3l4Lwwau5pfBMZl3",
      "name": "v3"
    },
    {
      "createdAt": "2025-09-02T10:27:32.363Z",
      "updatedAt": "2025-09-02T10:27:32.363Z",
      "id": "2BtkD10KS8583pCr",
      "name": "working"
    }
  ]
}