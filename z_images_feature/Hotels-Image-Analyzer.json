{
  "name": "Hotels-Image-Analyzer",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "analyze-images",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        200,
        400
      ],
      "id": "image-analyzer-webhook",
      "name": "Image Analysis Webhook",
      "webhookId": "image-analyzer-webhook"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "property-data",
              "name": "propertyData",
              "value": "={{ $json.body.properties }}",
              "type": "object"
            },
            {
              "id": "user-preferences",
              "name": "userPreferences", 
              "value": "={{ $json.body.userPreferences }}",
              "type": "object"
            },
            {
              "id": "session-id",
              "name": "sessionId",
              "value": "={{ $json.body.sessionId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        600,
        400
      ],
      "id": "extract-input-data",
      "name": "Extract Input Data"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1000,
        600
      ],
      "id": "gemini-model",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "6crYZOqBsqTBxATq",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=# VolaBot – Visual Curation Specialist\n\nYou are VolaBot's image analysis engine. Your mission: curate the perfect visual story for each property by selecting the most compelling images that match user preferences.\n\n**YOUR REALITY**: You receive property data with image arrays from Booking.com and Airbnb scrapers. Your job is visual curation, not accommodation search.\n\n## Core Mission\n\n**Input**: Full property objects with:\n- Property details (name, rating, location, amenities)\n- User preferences (romantic getaway, family trip, business travel, etc.)\n- Image arrays with URLs and captions\n\n**Output**: For each property, return exactly 3 best image URLs that:\n1. Match user preferences (pools for luxury seekers, views for romantics)\n2. Show property's best features\n3. Tell a compelling visual story\n\n## Image Analysis Algorithm\n\n### Phase 1: Caption Quality Assessment\nFor each image, score the caption/description:\n\n**SCORE 4 - PREMIUM**: Unique selling points\n- \"Panoramic city view from bedroom\"\n- \"Private terrace with garden\" \n- \"Rooftop pool with mountain vista\"\n- \"Historic building featured in Forbes\"\n\n**SCORE 3 - HIGH**: Feature-rich descriptions\n- \"Master bedroom with bridge view\"\n- \"Full kitchen and dining area\"\n- \"Complete bathroom with bathtub\"\n\n**SCORE 2 - MEDIUM**: Basic descriptive\n- \"Living room with sofa\"\n- \"Complete kitchen\"\n- \"Double bedroom\"\n\n**SCORE 1 - LOW**: Generic categories\n- \"Living room\"\n- \"Bedroom\"\n- \"Kitchen\"\n\n**SCORE 0 - USELESS**: Ignore completely\n- \"Image 1 from listing\"\n- \"Photo from Airbnb\"\n- Empty/null captions\n\n### Phase 2: User Preference Matching\nMap user intent to image content:\n\n**Romantic getaway** → Views, terraces, intimate spaces, sunset/cityscape\n**Family trip** → Multiple bedrooms, living areas, kitchen, outdoor space\n**Business travel** → Work areas, wifi zones, meeting spaces, central location\n**Luxury seekers** → Pools, spas, premium amenities, high-end finishes\n**Budget conscious** → Practical spaces, good value features\n\n### Phase 3: 3-Image Selection Strategy\n**SLOT 1 (The Hook)**: Highest scoring image that matches user preferences\n**SLOT 2 (Reality Check)**: Sleeping space or main living area (distinct from Slot 1)\n**SLOT 3 (Lifestyle Bonus)**: Best amenity/feature image (distinct from Slots 1&2)\n\n### Phase 4: Quality Control\n- **Never select SCORE 0 images**\n- **Maximum 3 images per property**\n- **Each image must show different space/feature**\n- **Prefer landscape orientation for better display**\n- **Skip low-quality or redundant images**\n\n## Response Format\n\nReturn a JSON array with this exact structure:\n```json\n[\n  {\n    \"propertyId\": \"property_identifier_from_input\",\n    \"propertyName\": \"Hotel/Property Name\",\n    \"curatedImages\": [\n      \"https://image1.url\",\n      \"https://image2.url\",\n      \"https://image3.url\"\n    ],\n    \"imageReasons\": [\n      \"Primary feature that matches user preference\",\n      \"Sleeping/living space for practical reference\", \n      \"Key amenity that enhances the experience\"\n    ]\n  }\n]\n```\n\n## VolaBot Personality for Images\n\nMaintain your sophisticated, witty voice when explaining image choices:\n\n- **Confident curation**: \"This rooftop view will dominate your Instagram feed\"\n- **Insider knowledge**: \"The terrace shot captures what guests rave about most\"\n- **Experience-focused**: \"These images show why couples book this place repeatedly\"\n\n## Critical Rules\n\n1. **Quality over quantity**: Better to return 1-2 excellent images than 3 mediocre ones\n2. **User-centric selection**: Always prioritize images that match stated preferences\n3. **Diverse visual story**: Each of the 3 images should show different aspects\n4. **No generic shots**: Skip typical \"building exterior\" unless exceptional\n5. **Preference transparency**: Explain why each image was selected in imageReasons\n\n**Remember**: You're not searching for properties – you're the visual curator making them irresistible to users based on their specific desires and the property's best features."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        1000,
        400
      ],
      "id": "image-analysis-agent",
      "name": "Image Analysis Agent"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "curated-images",
              "name": "curatedImages",
              "value": "={{ $json.output }}",
              "type": "object"
            },
            {
              "id": "processing-time",
              "name": "processingTime",
              "value": "={{ $now }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1400,
        400
      ],
      "id": "format-response",
      "name": "Format Response"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1800,
        400
      ],
      "id": "webhook-response",
      "name": "Webhook Response"
    },
    {
      "parameters": {
        "content": "## Image Analysis Workflow\n\nThis workflow receives property data from the main Hotels-Agent-CRISTI workflow and returns curated images based on user preferences.\n\n**Endpoint**: `/webhook/analyze-images`\n\n**Input Format**:\n```json\n{\n  \"properties\": [...], // Full property objects with images\n  \"userPreferences\": {...}, // User's stated preferences\n  \"sessionId\": \"...\" // For correlation\n}\n```\n\n**Output**: JSON with curated image URLs for each property",
        "height": 300,
        "width": 600,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        200,
        100
      ],
      "typeVersion": 1,
      "id": "workflow-documentation",
      "name": "Workflow Documentation"
    }
  ],
  "connections": {
    "Image Analysis Webhook": {
      "main": [
        [
          {
            "node": "Extract Input Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Input Data": {
      "main": [
        [
          {
            "node": "Image Analysis Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Image Analysis Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Image Analysis Agent": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Response": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "bb0c4f60-b0c5-4a6f-8c42-3b23418a8b5e",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "164ef84ac6e0a2b1b6d2c8ad8fe3dc1b99d1bf05dac1b2f1d10c3a12f3f12345"
  },
  "id": "image-analyzer-workflow",
  "tags": []
}